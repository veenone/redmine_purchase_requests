<%# filepath: /opt/redmine/plugins/redmine_purchase_requests/app/views/purchase_requests/_form.html.erb %>
<%= form_with(model: purchase_request, 
               url: defined?(form_url) ? form_url : nil,
               local: true, 
               multipart: true, 
               id: 'purchase-request-form') do |form| %>
  <% if purchase_request.errors.any? %>
    <div id="error_explanation" class="flash error">
      <h3><%= l(:label_form_contains_errors, count: purchase_request.errors.count) %></h3>
      <ul>
        <% purchase_request.errors.full_messages.each do |message| %>
          <li><%= message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>
  
  <div id="tab-general" class="tab-pane">
    <div class="box tabular general-fields">
      <div class="form-row">
        <p>
          <%= form.label :title, l(:field_title), class: 'required' %> <span class="required">*</span>
          <%= form.text_field :title, required: true, size: 60, maxlength: 255, class: 'form-control' %>
          <em class="info"><%= l(:text_purchase_title_info) %></em>
        </p>
      </div>
      
      <div class="form-row">
        <p>
          <%= form.label :description, l(:field_description) %>
          <%= form.text_area :description, rows: 6, cols: 60, class: 'wiki-edit form-control' %>
          <em class="info"><%= l(:text_purchase_description_info) %></em>
        </p>
      </div>
      
      <div class="form-row">
        <p>
          <%= form.label :status_id, l(:field_status), class: 'required' %> <span class="required">*</span>
          <%= form.collection_select :status_id, PurchaseRequestStatus.sorted, :id, :name, 
                                   { selected: purchase_request.status_id || PurchaseRequestStatus.default&.id || PurchaseRequestStatus.first&.id },
                                   { required: true, class: 'form-control' } %>
        </p>
      </div>
      
      <div class="form-row">
        <p>
          <%= form.label :priority, l(:field_priority) %>
          <%= form.select :priority, 
                       [[l(:label_priority_low), 'low'], 
                        [l(:label_priority_normal), 'normal'], 
                        [l(:label_priority_high), 'high'], 
                        [l(:label_priority_urgent), 'urgent']], 
                       { selected: purchase_request.priority || 'normal' },
                       { class: 'form-control' } %>
        </p>
      </div>
      
      <div class="form-row">
        <p>
          <%= form.label :due_date, l(:field_due_date) %>
          <%= form.date_field :due_date, class: 'form-control' %>
          <em class="info"><%= l(:text_due_date_info) %></em>
        </p>
      </div>
    </div>
  </div>
  
  <div id="tab-details" class="tab-pane">
    <div class="box tabular detail-fields">
      <div class="form-row">
        <p>
          <%= form.label :product_url, l(:field_product_url) %>
          <%= form.text_field :product_url, size: 60, class: 'form-control' %>
          <em class="info"><%= l(:text_product_url_info) %> <%= l(:text_optional) %></em>
        </p>
      </div>
      
      <div class="form-row">
        <p>
          <%= form.label :estimated_price, l(:field_estimated_price) %>
          <span class="currency-price-wrapper">
            <span class="currency-select-wrapper">
              <%= form.select :currency, 
                            currency_options,
                            { selected: purchase_request.currency || Setting.plugin_redmine_purchase_requests['default_currency'] || 'USD' },
                            { class: 'currency-select' } %>
            </span>
            <%= form.number_field :estimated_price, min: 0, step: '0.01', class: 'price-field' %>
          </span>
          <em class="info"><%= l(:text_estimated_price_info) %></em>
        </p>
      </div>
      
      <div class="form-row">
        <p>
          <%= form.label :vendor, l(:field_vendor) %>
          <% 
            vendors = Vendor.sorted 
            allow_custom = Setting.plugin_redmine_purchase_requests['allow_custom_vendors'] == '1'
            
            if vendors.any?
              # Get the current selected vendor if any
              current_vendor = nil
              current_vendor_name = nil
              
              if purchase_request.vendor_id.present?
                current_vendor = Vendor.find_by(id: purchase_request.vendor_id)
                current_vendor_name = current_vendor.try(:name)
              elsif purchase_request.vendor.present?
                current_vendor_name = purchase_request.vendor
              end
          %>
            <div class="vendor-selector">
              <% if Redmine::VERSION::MAJOR >= 4 %>
                <%= form.select :vendor_id, 
                              vendors.collect{|v| [v.name, v.id]},
                              { include_blank: true, selected: purchase_request.vendor_id },
                              { class: 'vendor-select form-control' } %>
              <% else %>
                <%= form.select :vendor_id, 
                              vendors.collect{|v| [v.name, v.id]},
                              { include_blank: true },
                              { class: 'vendor-select form-control' } %>
              <% end %>
                          
              <% if allow_custom %>
                <%= form.text_field :vendor, size: 40, class: 'form-control vendor-input', 
                                  style: 'display: none;',
                                  placeholder: l(:label_enter_custom_vendor) %>
                <%= check_box_tag 'custom_vendor', '1', purchase_request.vendor_id.blank? && purchase_request.vendor.present?, 
                                class: 'custom-vendor-checkbox' %>
                <%= label_tag 'custom_vendor', l(:label_use_custom_vendor), class: 'checkbox-label' %>
              <% end %>
            </div>
            
            <div class="vendor-details" style="display: none;">
              <table class="vendor-info-table">
                <tr id="vendor-id-row" style="display: none;">
                  <td class="vendor-label"><%= l(:field_vendor_id) %>:</td>
                  <td class="vendor-value" id="vendor-id-value"></td>
                </tr>
                <tr id="vendor-address-row" style="display: none;">
                  <td class="vendor-label"><%= l(:field_address) %>:</td>
                  <td class="vendor-value" id="vendor-address-value"></td>
                </tr>
                <tr id="vendor-contact-row" style="display: none;">
                  <td class="vendor-label"><%= l(:field_contact_person) %>:</td>
                  <td class="vendor-value" id="vendor-contact-value"></td>
                </tr>
                <tr id="vendor-phone-row" style="display: none;">
                  <td class="vendor-label"><%= l(:field_phone) %>:</td>
                  <td class="vendor-value" id="vendor-phone-value"></td>
                </tr>
                <tr id="vendor-email-row" style="display: none;">
                  <td class="vendor-label"><%= l(:field_email) %>:</td>
                  <td class="vendor-value" id="vendor-email-value"></td>
                </tr>
              </table>
            </div>
          <% else %>
            <%= form.text_field :vendor, size: 40, class: 'form-control vendor-input' %>
          <% end %>
          <em class="info"><%= l(:text_vendor_info) %></em>
        </p>
      </div>
      
      <div class="form-row">
        <p>
          <%= form.check_box :notify_manager, class: 'form-control-checkbox' %>
          <%= form.label :notify_manager, l(:field_notify_manager) %>
          <em class="info"><%= l(:text_notify_manager_info) %></em>
        </p>
      </div>
      
      <div class="form-row">
        <p>
          <%= form.label :notes, l(:label_additional_notes) %>
          <%= form.text_area :notes, rows: 4, cols: 60, placeholder: l(:text_additional_notes_placeholder), class: 'form-control' %>
        </p>
      </div>
    </div>
  </div>
  
  <div id="tab-attachments" class="tab-pane">
    <div class="box tabular attachment-fields">
      <div class="form-row">
        <p>
          <%= form.label :attachment, l(:label_attachment_plural) %>
          <%= form.file_field :attachments, multiple: true, class: 'attachments-field form-control' %>
          <em class="info"><%= l(:text_attachment_info) %></em>
        </p>
      </div>
      
      <% if purchase_request.attachments.any? %>
        <div class="existing-attachments">
          <h3><%= l(:label_existing_attachments) %></h3>
          <ul>
            <% purchase_request.attachments.each do |attachment| %>
              <li>
                <%= link_to_attachment attachment, class: 'icon icon-attachment' %>
                <span class="size">(<%= number_to_human_size(attachment.filesize) %>)</span>
                <span class="author"><%= attachment.author.name %>, <%= format_time(attachment.created_on) %></span>
              </li>
            <% end %>
          </ul>
        </div>
      <% end %>
    </div>
  </div>
  
  <div class="form-actions">
    <% if purchase_request.new_record? %>
      <%= form.submit defined?(button_label) ? button_label : l(:button_create), class: 'button-positive' %>
    <% else %>
      <%= form.submit defined?(button_label) ? button_label : l(:button_save), class: 'button-positive' %>
    <% end %>
    <%= link_to l(:button_cancel), defined?(cancel_path) ? cancel_path : project_purchase_requests_path(@project), class: 'button-negative' %>
  </div>
<% end %>

<% content_for :header_tags do %>
  <style>
    /* Header styling */
    .purchase-request-header {
      margin-bottom: 20px;
    }
    
    .purchase-request-header h2 {
      margin-bottom: 10px;
      display: flex;
      align-items: center;
    }
    
    .request-id {
      font-size: 0.9em;
      color: #777;
      margin-left: 10px;
    }
    
    .request-meta {
      display: flex;
      align-items: center;
      gap: 15px;
    }
    
    .status-badge {
      display: inline-block;
      padding: 3px 8px;
      border-radius: 3px;
      color: white;
      font-size: 12px;
      text-shadow: 0 -1px 0 rgba(0, 0, 0, 0.25);
    }
    
    .last-updated {
      color: #666;
      font-size: 0.9em;
    }
    
    /* Purchase request title */
    .purchase-request-title {
      border-bottom: 1px solid #eee;
      padding-bottom: 10px;
      margin-bottom: 15px;
    }
    
    .purchase-request-title h3 {
      margin: 0;
      color: #333;
      font-size: 1.4em;
    }
    
    /* Tab styling */
    .tabs {
      margin-bottom: 15px;
    }
    
    .tabs ul {
      display: flex;
      list-style: none;
      padding: 0;
      margin: 0;
      border-bottom: 1px solid #ddd;
    }
    
    .tabs ul li {
      margin-right: 5px;
    }
    
    .tabs ul li a {
      display: block;
      padding: 8px 15px;
      text-decoration: none;
      border: 1px solid transparent;
      border-bottom: none;
      border-radius: 3px 3px 0 0;
      color: #555;
    }
    
    .tabs ul li.selected a {
      background-color: #fff;
      border-color: #ddd;
      border-bottom-color: #fff;
      color: #333;
      position: relative;
      bottom: -1px;
      font-weight: bold;
    }
    
    /* Form styling */
    .purchase-request-edit-container {
      background-color: #fff;
      border-radius: 4px;
    }
    
    .form-row {
      margin-bottom: 15px;
    }
    
    .form-control {
      padding: 6px 8px;
      border: 1px solid #ccc;
      border-radius: 3px;
      font-size: 14px;
      width: 100%;
      box-sizing: border-box;
    }
    
    .form-control:focus {
      border-color: #66afe9;
      outline: 0;
      box-shadow: 0 0 8px rgba(102, 175, 233, 0.6);
    }
    
    .form-control-checkbox {
      margin-right: 5px;
    }
    
    /* Currency input styling */
    .currency-wrapper {
      position: relative;
      display: block;
      width: 100%;
    }
    
    .currency-symbol {
      position: absolute;
      top: 50%;
      left: 10px;
      transform: translateY(-50%);
      color: #666;
      font-weight: bold;
    }
    
    .currency-field {
      padding-left: 25px !important;
    }
    
    /* Button styling */
    .button-action {
      display: inline-block;
      padding: 5px 10px;
      margin-left: 5px;
      border-radius: 3px;
      text-decoration: none;
      transition: background-color 0.2s ease;
    }
    
    .button-highlight {
      background-color: #f5f5f5;
    }
    
    .form-actions {
      margin-top: 20px;
      padding-top: 15px;
      border-top: 1px solid #eee;
      text-align: center;
    }
    
    .button-positive {
      background-color: #4CAF50;
      color: white;
      padding: 8px 16px;
      border: none;
      border-radius: 3px;
      cursor: pointer;
      font-weight: bold;
      transition: background-color 0.2s;
    }
    
    .button-positive:hover {
      background-color: #45a049;
    }
    
    .button-negative {
      background-color: #f44336;
      color: white;
      padding: 8px 16px;
      border: none;
      border-radius: 3px;
      cursor: pointer;
      margin-left: 10px;
      text-decoration: none;
      display: inline-block;
      font-weight: bold;
      transition: background-color 0.2s;
    }
    
    .button-negative:hover {
      background-color: #da190b;
    }
    
    /* Helper text */
    .info {
      display: block;
      color: #888;
      font-size: 0.9em;
      margin-top: 5px;
    }
    
    /* Required field indicator */
    .required {
      color: #d00;
      font-weight: bold;
    }
    
    /* Existing attachments styling */
    .existing-attachments {
      margin-top: 20px;
      padding: 15px;
      background-color: #f9f9f9;
      border-radius: 3px;
    }
    
    .existing-attachments h3 {
      margin-top: 0;
      font-size: 1.1em;
      color: #333;
    }
    
    .existing-attachments ul {
      list-style: none;
      padding: 0;
    }
    
    .existing-attachments li {
      padding: 5px 0;
      border-bottom: 1px solid #eee;
    }
    
    .existing-attachments .size {
      color: #888;
      font-size: 0.9em;
    }
    
    .existing-attachments .author {
      color: #555;
      font-size: 0.9em;
      margin-left: 10px;
    }
    
    /* Box styling improvements */
    .box.tabular {
      padding: 15px;
      margin-bottom: 0;
    }
    
    .box.tabular p {
      padding: 5px 0;
      margin-bottom: 8px;
    }

    .currency-price-wrapper {
      display: flex;
      align-items: center;
      width: 100%;
    }
    
    .currency-select-wrapper {
      margin-right: 10px;
    }
    
    .currency-select {
      min-width: 100px;
    }
    
    .price-field {
      flex: 1;
    }

    /* Vendor selector styling */
    .vendor-selector {
      display: flex;
      align-items: center;
      gap: 10px;
    }
    
    .vendor-select {
      min-width: 250px;
    }
    
    .vendor-details {
      margin-top: 10px;
      padding: 10px;
      background-color: #f9f9f9;
      border-radius: 3px;
      border-left: 3px solid #3498db;
    }
    
    .vendor-info-table {
      width: 100%;
    }
    
    .vendor-label {
      width: 120px;
      color: #666;
      font-weight: bold;
      padding: 3px 0;
      vertical-align: top;
    }
    
    .vendor-value {
      padding: 3px 0;
    }
  </style>
<% end %>

<%= javascript_tag do %>
$(document).ready(function() {
  // Initialize any JS-based controls
  $('#purchase_request_description').addClass('wiki-edit');
  
  // Vendor select functionality
  $('#purchase_request_vendor_id').change(function() {
    var selectedVendorId = $(this).val();
    
    if (selectedVendorId) {
      // If a vendor is selected, hide custom input and get vendor details
      $('.vendor-input').hide();
      $('#custom_vendor').prop('checked', false);
      
      // Get vendor details via AJAX
      $.ajax({
        url: '<%= vendors_path %>/autocomplete',
        data: { id: selectedVendorId },
        dataType: 'json',
        success: function(data) {
          if (data && data.length > 0) {
            var vendor = data[0];
            
            // Show vendor details and populate fields
            $('.vendor-details').show();
            
            // Show/hide rows based on data availability
            if (vendor.vendor_id) {
              $('#vendor-id-row').show();
              $('#vendor-id-value').text(vendor.vendor_id);
            } else {
              $('#vendor-id-row').hide();
            }
            
            if (vendor.address) {
              $('#vendor-address-row').show();
              $('#vendor-address-value').text(vendor.address);
            } else {
              $('#vendor-address-row').hide();
            }
            
            if (vendor.contact_person) {
              $('#vendor-contact-row').show();
              $('#vendor-contact-value').text(vendor.contact_person);
            } else {
              $('#vendor-contact-row').hide();
            }
            
            if (vendor.phone) {
              $('#vendor-phone-row').show();
              $('#vendor-phone-value').text(vendor.phone);
            } else {
              $('#vendor-phone-row').hide();
            }
            
            if (vendor.email) {
              $('#vendor-email-row').show();
              $('#vendor-email-value').text(vendor.email);
            } else {
              $('#vendor-email-row').hide();
            }
          } else {
            $('.vendor-details').hide();
          }
        },
        error: function() {
          $('.vendor-details').hide();
        }
      });
    } else {
      // If no vendor is selected
      if ($('#custom_vendor').is(':checked')) {
        $('.vendor-input').show().focus();
      }
      $('.vendor-details').hide();
    }
  });
  
  // Custom vendor checkbox
  $('#custom_vendor').change(function() {
    if ($(this).is(':checked')) {
      // Show custom vendor input, hide dropdown
      $('#purchase_request_vendor_id').val('');
      $('.vendor-input').show().focus();
      $('.vendor-details').hide();
    } else {
      // Show dropdown, hide custom vendor input
      $('.vendor-input').hide().val('');
      $('#purchase_request_vendor_id').focus();
    }
  });
  
  // Initialize vendor selection
  if ($('#purchase_request_vendor_id').val()) {
    $('#purchase_request_vendor_id').trigger('change');
  } else if ($('#custom_vendor').is(':checked')) {
    $('.vendor-input').show();
  }
  
  // Show confirmation if user attempts to leave page with unsaved changes
  var formChanged = false;
  
  $('#purchase-request-form input, #purchase-request-form textarea, #purchase-request-form select').change(function() {
    formChanged = true;
  });
  
  $(window).on('beforeunload', function() {
    if (formChanged) {
      return '<%= l(:text_unsaved_changes_confirmation) %>';
    }
  });
  
  // Submit button disables form changed flag
  $('#purchase-request-form input[type="submit"]').click(function() {
    formChanged = false;
  });
});
<% end %>