<% content_for :header_tags do %>
  <%= stylesheet_link_tag 'purchase_requests', plugin: 'redmine_purchase_requests' %>
  <%= stylesheet_link_tag 'purchase_request_buttons', plugin: 'redmine_purchase_requests' %>
  <%= javascript_include_tag 'purchase_requests', plugin: 'redmine_purchase_requests' %>
<% end %>

<style>
  .dashboard-container {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(450px, 1fr));
    gap: 20px;
    margin-bottom: 20px;
  }

  .dashboard-card {
    background-color: #fff;
    border-radius: 5px;
    box-shadow: 0 1px 3px rgba(0,0,0,.1);
    overflow: hidden;
    transition: box-shadow 0.3s ease;
  }

  .dashboard-card:hover {
    box-shadow: 0 3px 8px rgba(0,0,0,.15);
  }

  .dashboard-card-header {
    background-color: #f5f5f5;
    padding: 12px 15px;
    border-bottom: 1px solid #e5e5e5;
  }

  .dashboard-card-header h3 {
    margin: 0;
    font-size: 15px;
    color: #333;
  }

  .dashboard-card-body {
    padding: 15px;
  }

  .summary-stats {
    display: flex;
    justify-content: space-between;
    margin-bottom: 20px;
    flex-wrap: wrap;
  }

  .stat-box {
    flex: 1;
    min-width: 200px;
    background-color: #fff;
    border-radius: 5px;
    box-shadow: 0 1px 3px rgba(0,0,0,.1);
    padding: 15px;
    margin: 0 10px 10px 0;
    text-align: center;
  }

  .stat-number {
    font-size: 24px;
    font-weight: bold;
    margin-bottom: 8px;
  }

  .stat-label {
    font-size: 13px;
    color: #666;
  }

  .stat-currency {
    color: #2e7d32;
  }

  table.dashboard-table {
    width: 100%;
    border-collapse: collapse;
  }

  table.dashboard-table th,
  table.dashboard-table td {
    text-align: left;
    padding: 8px;
    border-bottom: 1px solid #ddd;
  }

  table.dashboard-table tr:last-child td {
    border-bottom: none;
  }

  table.dashboard-table th {
    background-color: #f5f5f5;
    font-weight: bold;
  }

  .chart-container {
    width: 100%;
    height: 250px;
    margin-top: 10px;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: #f9f9f9;
    color: #666;
    font-style: italic;
  }

  .exchange-rates-info {
    margin-top: 20px;
  }

  .exchange-rates-info h4 {
    margin-bottom: 10px;
    color: #333;
  }

  .info-text {
    margin-bottom: 15px;
    color: #666;
    font-size: 14px;
  }

  /* Native Chart Styles */
  .native-chart {
    margin: 15px 0;
    padding: 10px;
    background: #f9f9f9;
    border-radius: 5px;
  }

  .chart-bar-container {
    display: flex;
    align-items: flex-end;
    height: 150px;
    margin: 10px 0;
    padding: 10px;
    background: white;
    border: 1px solid #ddd;
    border-radius: 3px;
  }

  .chart-bar {
    background: linear-gradient(to top, #007bff, #0056b3);
    margin: 0 2px;
    border-radius: 2px 2px 0 0;
    position: relative;
    min-width: 30px;
    flex: 1;
    display: flex;
    flex-direction: column;
    justify-content: flex-end;
    align-items: center;
    transition: all 0.3s ease;
  }

  .chart-bar:hover {
    background: linear-gradient(to top, #0056b3, #003d82);
    transform: scale(1.05);
  }

  .chart-bar-value {
    position: absolute;
    top: -25px;
    font-size: 11px;
    font-weight: bold;
    color: #333;
    white-space: nowrap;
  }

  .chart-bar-label {
    position: absolute;
    bottom: -20px;
    font-size: 10px;
    color: #666;
    white-space: nowrap;
    text-align: center;
  }

  .chart-pie-container {
    display: flex;
    align-items: center;
    gap: 20px;
    margin: 10px 0;
  }

  .chart-pie {
    width: 120px;
    height: 120px;
    border-radius: 50%;
    position: relative;
  }

  .chart-pie-legend {
    flex: 1;
  }

  .legend-item {
    display: flex;
    align-items: center;
    margin: 5px 0;
    font-size: 13px;
  }

  .legend-color {
    width: 12px;
    height: 12px;
    border-radius: 2px;
    margin-right: 8px;
  }

  .chart-line-container {
    height: 150px;
    position: relative;
    margin: 10px 0;
    padding: 10px;
    background: white;
    border: 1px solid #ddd;
    border-radius: 3px;
  }

  .chart-line-grid {
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
  }

  .chart-line-grid-line {
    position: absolute;
    width: 100%;
    height: 1px;
    background: #eee;
  }

  .chart-line-path {
    stroke: #007bff;
    stroke-width: 2;
    fill: none;
  }

  .chart-line-point {
    fill: #007bff;
    stroke: white;
    stroke-width: 2;
  }
</style>

<% html_title l(:label_purchase_request_dashboard) %>

<%
  # Define currency symbols at the beginning of the template so it's available everywhere
  symbol_map = {
    'USD' => '$',
    'EUR' => '€',
    'GBP' => '£',
    'JPY' => '¥',
    'CAD' => 'C$',
    'AUD' => 'A$',
    'CHF' => 'CHF',
    'CNY' => '¥',
    'SEK' => 'kr',
    'NZD' => 'NZ$',
    'MXN' => 'Mex$',
    'SGD' => 'S$',
    'HKD' => 'HK$',
    'IDR' => 'Rp',
    'NOK' => 'kr',
    'KRW' => '₩',
    'TRY' => '₺',
    'RUB' => '₽',
    'INR' => '₹',
    'BRL' => 'R$',
    'ZAR' => 'R'
  }

  # Helper function to get currency symbol - renamed to avoid conflict with helper method
  def local_currency_symbol(currency_code, symbol_map)
    symbol_map[currency_code] || currency_code
  end
%>

<h2><%= l(:label_purchase_request_dashboard) %></h2>

<div class="contextual">
  <%= link_to l(:label_purchase_requests), project_purchase_requests_path(@project), class: 'icon icon-list' %>
  <%= link_to l(:label_new_purchase_request), new_project_purchase_request_path(@project), class: 'icon icon-add' %>
  <% if User.current.allowed_to?(:view_tpc_codes, @project) %>
    <%= link_to l(:label_tpc_codes), project_tpc_codes_path(@project), class: 'icon icon-projects' %>
  <% end %>
</div>

<div class="summary-stats">
  <div class="stat-box">
    <div class="stat-number"><%= @total_requests %></div>
    <div class="stat-label"><%= l(:label_total_requests) %></div>
  </div>

  <div class="stat-box">
    <div class="stat-number"><%= @open_requests %></div>
    <div class="stat-label"><%= l(:label_open_requests) %></div>
  </div>

  <div class="stat-box">
    <div class="stat-number"><%= @closed_requests %></div>
    <div class="stat-label"><%= l(:label_closed_requests) %></div>
  </div>

  <%
    # Get currency symbol for top stats
    summary_currency = Setting.plugin_redmine_purchase_requests['default_currency'] || 'USD'
    summary_symbol = local_currency_symbol(summary_currency, symbol_map)
  %>
  <div class="stat-box">
    <div class="stat-number stat-currency"><%= summary_symbol %><%= number_with_precision(@total_estimated_cost, precision: 2, delimiter: ',') %></div>
    <div class="stat-label"><%= l(:label_total_estimated_cost) %></div>
  </div>
</div>

<div class="dashboard-container">
  <!-- Status Distribution Card -->
  <div class="dashboard-card">
    <div class="dashboard-card-header">
      <h3><%= l(:label_status_distribution) %></h3>
    </div>
    <div class="dashboard-card-body">
      <% if @status_distribution.present? && @status_distribution.any? %>
        <!-- Native Pie Chart -->
        <div class="chart-pie-container">
          <div class="chart-pie" id="status-pie-chart">
            <!-- SVG Pie Chart will be generated here -->
          </div>
          <div class="chart-pie-legend">
            <% @status_distribution.each do |status| %>
              <div class="legend-item">
                <div class="legend-color" style="background-color: <%= status[:color] || '#777777' %>;"></div>
                <span><%= status[:name] %> (<%= status[:count] %> - <%= status[:percentage] %>%)</span>
              </div>
            <% end %>
          </div>
        </div>
        
        <table class="dashboard-table">
          <tr>
            <th><%= l(:field_status) %></th>
            <th><%= l(:label_count) %></th>
            <th><%= l(:label_percentage) %></th>
          </tr>
          <% @status_distribution.each do |status| %>
            <tr>
              <td>
                <span style="display: inline-block; width: 12px; height: 12px; background-color: <%= status[:color] || '#777777' %>; margin-right: 8px; border-radius: 2px;"></span>
                <%= status[:name] %>
              </td>
              <td><%= status[:count] %></td>
              <td><%= status[:percentage] %>%</td>
            </tr>
          <% end %>
        </table>
      <% else %>
        <p class="nodata"><%= l(:label_no_data) %></p>
      <% end %>
    </div>
  </div>

  <!-- Priority Distribution Card -->
  <div class="dashboard-card">
    <div class="dashboard-card-header">
      <h3><%= l(:label_priority_distribution) %></h3>
    </div>
    <div class="dashboard-card-body">
      <% if @priority_distribution.present? && @priority_distribution.values.sum > 0 %>
        <!-- Native Pie Chart -->
        <div class="chart-pie-container">
          <div class="chart-pie" id="priority-pie-chart">
            <!-- SVG Pie Chart will be generated here -->
          </div>
          <div class="chart-pie-legend">
            <div class="legend-item">
              <div class="legend-color" style="background-color: #f44336;"></div>
              <span><%= l(:label_priority_urgent) %> (<%= @priority_distribution[:urgent] %> - <%= @priority_percentages[:urgent] %>%)</span>
            </div>
            <div class="legend-item">
              <div class="legend-color" style="background-color: #ff9800;"></div>
              <span><%= l(:label_priority_high) %> (<%= @priority_distribution[:high] %> - <%= @priority_percentages[:high] %>%)</span>
            </div>
            <div class="legend-item">
              <div class="legend-color" style="background-color: #4caf50;"></div>
              <span><%= l(:label_priority_normal) %> (<%= @priority_distribution[:normal] %> - <%= @priority_percentages[:normal] %>%)</span>
            </div>
            <div class="legend-item">
              <div class="legend-color" style="background-color: #2196f3;"></div>
              <span><%= l(:label_priority_low) %> (<%= @priority_distribution[:low] %> - <%= @priority_percentages[:low] %>%)</span>
            </div>
          </div>
        </div>
        
        <table class="dashboard-table">
          <tr>
            <th><%= l(:field_priority) %></th>
            <th><%= l(:label_count) %></th>
            <th><%= l(:label_percentage) %></th>
          </tr>
          <tr>
            <td>
              <span style="display: inline-block; width: 12px; height: 12px; background-color: #f44336; margin-right: 8px; border-radius: 2px;"></span>
              <%= l(:label_priority_urgent) %>
            </td>
            <td><%= @priority_distribution[:urgent] %></td>
            <td><%= @priority_percentages[:urgent] %>%</td>
          </tr>
          <tr>
            <td>
              <span style="display: inline-block; width: 12px; height: 12px; background-color: #ff9800; margin-right: 8px; border-radius: 2px;"></span>
              <%= l(:label_priority_high) %>
            </td>
            <td><%= @priority_distribution[:high] %></td>
            <td><%= @priority_percentages[:high] %>%</td>
          </tr>
          <tr>
            <td>
              <span style="display: inline-block; width: 12px; height: 12px; background-color: #4caf50; margin-right: 8px; border-radius: 2px;"></span>
              <%= l(:label_priority_normal) %>
            </td>
            <td><%= @priority_distribution[:normal] %></td>
            <td><%= @priority_percentages[:normal] %>%</td>
          </tr>
          <tr>
            <td>
              <span style="display: inline-block; width: 12px; height: 12px; background-color: #2196f3; margin-right: 8px; border-radius: 2px;"></span>
              <%= l(:label_priority_low) %>
            </td>
            <td><%= @priority_distribution[:low] %></td>
            <td><%= @priority_percentages[:low] %>%</td>
          </tr>
        </table>
      <% else %>
        <p><%= l(:label_no_data) %></p>
      <% end %>
    </div>
  </div>

  <!-- Financial Overview Card -->
  <div class="dashboard-card">
    <div class="dashboard-card-header">
      <h3><%= l(:label_financial_overview) %></h3>
    </div>
    <div class="dashboard-card-body">
      <div class="financial-stats">
        <table class="dashboard-table">
          <%
            default_currency = Setting.plugin_redmine_purchase_requests['default_currency'] || 'USD'
            default_symbol = local_currency_symbol(default_currency, symbol_map)
          %>

          <tr>
            <th><%= l(:label_total_estimated_cost) %></th>
            <td class="stat-currency">
              <%= default_symbol %><%= number_with_precision(@total_estimated_cost, precision: 2, delimiter: ',') %>
              <span class="currency-code">(<%= default_currency %>)</span>
            </td>
          </tr>
          <tr>
            <th><%= l(:label_pending_cost) %></th>
            <td class="stat-currency">
              <%= default_symbol %><%= number_with_precision(@pending_cost, precision: 2, delimiter: ',') %>
              <span class="currency-code">(<%= default_currency %>)</span>
            </td>
          </tr>
          <tr>
            <th><%= l(:label_approved_cost) %></th>
            <td class="stat-currency">
              <%= default_symbol %><%= number_with_precision(@approved_cost, precision: 2, delimiter: ',') %>
              <span class="currency-code">(<%= default_currency %>)</span>
            </td>
          </tr>
          <tr>
            <th><%= l(:label_average_request_amount) %></th>
            <td class="stat-currency">
              <% avg = @total_requests > 0 ? @total_estimated_cost / @total_requests : 0 %>
              <%= default_symbol %><%= number_with_precision(avg, precision: 2, delimiter: ',') %>
              <span class="currency-code">(<%= default_currency %>)</span>
            </td>
          </tr>

          <% if @currency_distribution && @currency_distribution.size > 1 %>
            <tr>
              <th colspan="2" class="section-header"><%= l(:label_currency_breakdown) %></th>
            </tr>
            <% @currency_distribution.each do |currency, amount| %>
              <tr>
                <th><%= currency %></th>
                <td class="stat-currency">
                  <%= local_currency_symbol(currency, symbol_map) %><%= number_with_precision(amount, precision: 2, delimiter: ',') %>
                </td>
              </tr>
            <% end %>
          <% end %>
        </table>
      </div>
    </div>
  </div>

  <!-- Top Requesters Card -->
  <div class="dashboard-card">
    <div class="dashboard-card-header">
      <h3><%= l(:label_top_requesters) %></h3>
    </div>
    <div class="dashboard-card-body">
      <% if @top_requesters.present? && @top_requesters.any? %>
        <table class="dashboard-table">
          <tr>
            <th><%= l(:field_user) %></th>
            <th><%= l(:label_requests) %></th>
            <th><%= l(:label_total_cost) %></th>
          </tr>
          <%
            # Get default currency for requesters table
            requester_currency = Setting.plugin_redmine_purchase_requests['default_currency'] || 'USD'
            requester_symbol = local_currency_symbol(requester_currency, symbol_map)
          %>
          <% @top_requesters.each do |user| %>
            <tr>
              <td><%= link_to(user.name.presence || user.login, user_path(user)) %></td>
              <td><%= user.request_count %></td>
              <td class="stat-currency"><%= requester_symbol %><%= number_with_precision(user.total_cost, precision: 2, delimiter: ',') %></td>
            </tr>
          <% end %>
        </table>
      <% else %>
        <p class="nodata"><%= l(:label_no_data) %></p>
      <% end %>
    </div>
  </div>

  <!-- Monthly Trends Card -->
  <div class="dashboard-card">
    <div class="dashboard-card-header">
      <h3><%= l(:label_monthly_trends) %></h3>
    </div>
    <div class="dashboard-card-body">
      <% if @monthly_trends.present? && @monthly_trends.any? %>
        <!-- Native Bar Chart -->
        <div class="chart-bar-container" id="monthly-trends-chart">
          <!-- Bar chart will be generated here -->
        </div>
        
        <table class="dashboard-table">
          <tr>
            <th><%= l(:label_month) %></th>
            <th><%= l(:label_requests) %></th>
            <th><%= l(:label_amount) %></th>
          </tr>
          <% @monthly_trends.each do |trend| %>
            <tr>
              <td><%= trend[:month] %></td>
              <td><%= trend[:count] %></td>
              <td class="stat-currency">
                <%= local_currency_symbol(default_currency, symbol_map) %><%= number_with_precision(trend[:amount], precision: 2, delimiter: ',') %>
              </td>
            </tr>
          <% end %>
        </table>
      <% else %>
        <p class="nodata"><%= l(:label_no_data) %></p>
      <% end %>
    </div>
  </div>

  <!-- Recent Activity Card -->
  <div class="dashboard-card">
    <div class="dashboard-card-header">
      <h3><%= l(:label_recent_requests) %></h3>
    </div>
    <div class="dashboard-card-body">
      <% if @recent_requests.present? && @recent_requests.any? %>
        <table class="dashboard-table">
          <tr>
            <th>#</th>
            <th><%= l(:field_title) %></th>
            <th><%= l(:field_status) %></th>
            <th><%= l(:field_created_on) %></th>
          </tr>
          <% @recent_requests.each do |request| %>
            <tr>
              <td><%= link_to "##{request.id}", project_purchase_request_path(@project, request) %></td>
              <td><%= link_to truncate(request.title, length: 30), project_purchase_request_path(@project, request) %></td>
              <td>
                <span class="status-badge" style="background-color: <%= request.status.color.presence || '#777777' %>; color: white; padding: 2px 5px; border-radius: 3px; font-size: 11px;">
                  <%= request.status.name %>
                </span>
              </td>
              <td><%= format_time(request.created_at) %></td>
            </tr>
          <% end %>
        </table>
      <% else %>
        <p class="nodata"><%= l(:label_no_data) %></p>
      <% end %>
    </div>
  </div>

  <!-- Top Vendors Card -->
  <div class="dashboard-card">
    <div class="dashboard-card-header">
      <h3><%= l(:label_top_vendors) %></h3>
    </div>
    <div class="dashboard-card-body">
      <% if @top_vendors.present? && @top_vendors.any? %>
        <table class="dashboard-table">
          <tr>
            <th><%= l(:field_vendor) %></th>
            <th><%= l(:label_requests) %></th>
            <th><%= l(:label_total_cost) %></th>
          </tr>
          <%
            # Get default currency for vendors table
            vendor_currency = Setting.plugin_redmine_purchase_requests['default_currency'] || 'USD'
            vendor_symbol = local_currency_symbol(vendor_currency, symbol_map)
          %>
          <% @top_vendors.each do |vendor| %>
            <tr>
              <td><%= vendor[:vendor] %></td>
              <td><%= vendor[:count] %></td>
              <td class="stat-currency"><%= vendor_symbol %><%= number_with_precision(vendor[:total_cost], precision: 2, delimiter: ',') %></td>
            </tr>
          <% end %>
        </table>
      <% else %>
        <p class="nodata"><%= l(:label_no_data) %></p>
      <% end %>
    </div>
  </div>

  <!-- Response Time Card -->
  <div class="dashboard-card">
    <div class="dashboard-card-header">
      <h3><%= l(:label_average_response_time) %></h3>
    </div>
    <div class="dashboard-card-body">
      <div class="stat-box" style="width: 100%; box-shadow: none; margin: 0;">
        <div class="stat-number"><%= @avg_response_days %> <%= l(:label_days) %></div>
        <div class="stat-label"><%= l(:label_avg_processing_time) %></div>
      </div>
    </div>
  </div>

  <!-- Currency Breakdown with Conversion Card -->
  <div class="dashboard-card">
    <div class="dashboard-card-header">
      <h3><%= l(:label_currency_breakdown_with_conversion) %></h3>
    </div>
    <div class="dashboard-card-body">
      <% if @converted_currency_distribution && @converted_currency_distribution.any? %>
        <table class="dashboard-table">
          <tr>
            <th><%= l(:field_currency) %></th>
            <th><%= l(:label_original_amount) %></th>
            <th><%= l(:label_equivalent_in_default) %></th>
          </tr>
          <%
            default_currency = Setting.plugin_redmine_purchase_requests['default_currency'] || 'USD'
          %>
          <% @converted_currency_distribution.each do |currency, data| %>
            <tr>
              <th><%= currency %></th>
              <td class="stat-currency">
                <%= local_currency_symbol(currency, symbol_map) %><%= number_with_precision(data[:original], precision: 2, delimiter: ',') %>
              </td>
              <td class="stat-currency">
                <%= local_currency_symbol(default_currency, symbol_map) %><%= number_with_precision(data[:converted], precision: 2, delimiter: ',') %>
              </td>
            </tr>
          <% end %>
          <tr class="total-row">
            <th><%= l(:label_total_in) %> <%= default_currency %></th>
            <td></td>
            <td class="stat-currency total-value">
              <%= local_currency_symbol(default_currency, symbol_map) %><%= number_with_precision(@total_estimated_cost, precision: 2, delimiter: ',') %>
            </td>
          </tr>
        </table>

        <%
          # Display exchange rates if available
          exchange_rates = Setting.plugin_redmine_purchase_requests['exchange_rates'] || {}
          if exchange_rates.any?
        %>
          <div class="exchange-rates-info">
            <h4><%= l(:label_exchange_rates) %></h4>
            <p class="info-text"><%= l(:text_exchange_rates_info) %></p>
            <table class="dashboard-table">
              <tr>
                <th><%= l(:field_currency) %></th>
                <th><%= l(:label_rate_to) %> <%= default_currency %></th>
              </tr>
              <% exchange_rates.each do |currency, rate| %>
                <tr>
                  <td><%= currency %></td>
                  <td><%= number_with_precision(rate.to_f, precision: 6) %></td>
                </tr>
              <% end %>
            </table>
          </div>
        <% end %>
      <% else %>
        <p class="nodata"><%= l(:label_no_data) %></p>
      <% end %>
    </div>
  </div>
</div>

<div class="box">
  <p><%= l(:text_dashboard_info) %></p>
  <p>
    <span class="icon icon-magnifier"><%= link_to l(:label_view_all_requests), project_purchase_requests_path(@project), class: 'button' %></span>
    <span class="icon icon-add"><%= link_to l(:label_new_purchase_request), new_project_purchase_request_path(@project), class: 'button button-positive' %></span>
  </p>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  // Generate Status Distribution Pie Chart
  <% if @status_distribution.present? && @status_distribution.any? %>
  generatePieChart('status-pie-chart', [
    <% @status_distribution.each do |status| %>
      {
        label: '<%= j(status[:name]) %>',
        value: <%= status[:count] %>,
        color: '<%= status[:color] || '#777777' %>'
      },
    <% end %>
  ]);
  <% end %>
  
  // Generate Priority Distribution Pie Chart
  <% if @priority_distribution.present? && @priority_distribution.values.sum > 0 %>
  generatePieChart('priority-pie-chart', [
    <% if @priority_distribution[:urgent] > 0 %>
      {
        label: '<%= j(l(:label_priority_urgent)) %>',
        value: <%= @priority_distribution[:urgent] %>,
        color: '#f44336'
      },
    <% end %>
    <% if @priority_distribution[:high] > 0 %>
      {
        label: '<%= j(l(:label_priority_high)) %>',
        value: <%= @priority_distribution[:high] %>,
        color: '#ff9800'
      },
    <% end %>
    <% if @priority_distribution[:normal] > 0 %>
      {
        label: '<%= j(l(:label_priority_normal)) %>',
        value: <%= @priority_distribution[:normal] %>,
        color: '#4caf50'
      },
    <% end %>
    <% if @priority_distribution[:low] > 0 %>
      {
        label: '<%= j(l(:label_priority_low)) %>',
        value: <%= @priority_distribution[:low] %>,
        color: '#2196f3'
      },
    <% end %>
  ]);
  <% end %>
  
  // Generate Monthly Trends Bar Chart
  <% if @monthly_trends.present? && @monthly_trends.any? %>
  generateBarChart('monthly-trends-chart', [
    <% @monthly_trends.each do |trend| %>
      {
        label: '<%= j(trend[:month]) %>',
        value: <%= trend[:count] %>,
        amount: <%= trend[:amount] %>
      },
    <% end %>
  ]);
  <% end %>
});

// Function to generate native pie charts using SVG
function generatePieChart(containerId, data) {
  const container = document.getElementById(containerId);
  if (!container || !data.length) return;
  
  const size = 120;
  const radius = size / 2 - 10;
  const centerX = size / 2;
  const centerY = size / 2;
  
  // Create SVG
  const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');
  svg.setAttribute('width', size);
  svg.setAttribute('height', size);
  svg.setAttribute('viewBox', `0 0 ${size} ${size}`);
  
  // Calculate total
  const total = data.reduce((sum, item) => sum + item.value, 0);
  
  if (total === 0) return;
  
  let currentAngle = 0;
  
  data.forEach((item, index) => {
    const percentage = item.value / total;
    const angle = percentage * 2 * Math.PI;
    
    if (percentage > 0) {
      // Create path for pie slice
      const startAngle = currentAngle;
      const endAngle = currentAngle + angle;
      
      const x1 = centerX + radius * Math.cos(startAngle);
      const y1 = centerY + radius * Math.sin(startAngle);
      const x2 = centerX + radius * Math.cos(endAngle);
      const y2 = centerY + radius * Math.sin(endAngle);
      
      const largeArcFlag = angle > Math.PI ? 1 : 0;
      
      const pathData = [
        `M ${centerX} ${centerY}`,
        `L ${x1} ${y1}`,
        `A ${radius} ${radius} 0 ${largeArcFlag} 1 ${x2} ${y2}`,
        'Z'
      ].join(' ');
      
      const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');
      path.setAttribute('d', pathData);
      path.setAttribute('fill', item.color);
      path.setAttribute('stroke', '#fff');
      path.setAttribute('stroke-width', '1');
      path.setAttribute('class', 'pie-slice');
      
      // Add hover effect
      path.addEventListener('mouseenter', function() {
        this.style.opacity = '0.8';
        this.style.transform = 'scale(1.05)';
        this.style.transformOrigin = `${centerX}px ${centerY}px`;
      });
      
      path.addEventListener('mouseleave', function() {
        this.style.opacity = '1';
        this.style.transform = 'scale(1)';
      });
      
      svg.appendChild(path);
      currentAngle += angle;
    }
  });
  
  container.appendChild(svg);
}

// Function to generate native bar charts
function generateBarChart(containerId, data) {
  const container = document.getElementById(containerId);
  if (!container || !data.length) return;
  
  // Clear existing content
  container.innerHTML = '';
  
  // Find max value for scaling
  const maxValue = Math.max(...data.map(item => item.value));
  
  if (maxValue === 0) return;
  
  data.forEach((item, index) => {
    const barHeight = (item.value / maxValue) * 120; // Max height 120px
    
    const bar = document.createElement('div');
    bar.className = 'chart-bar';
    bar.style.height = barHeight + 'px';
    bar.style.backgroundColor = '#007bff';
    
    // Add value label
    const valueLabel = document.createElement('div');
    valueLabel.className = 'chart-bar-value';
    valueLabel.textContent = item.value;
    bar.appendChild(valueLabel);
    
    // Add month label
    const monthLabel = document.createElement('div');
    monthLabel.className = 'chart-bar-label';
    monthLabel.textContent = item.label;
    bar.appendChild(monthLabel);
    
    // Add hover effect with amount
    bar.title = `${item.label}: ${item.value} requests`;
    if (item.amount !== undefined) {
      bar.title += ` (Total: $${item.amount.toLocaleString()})`;
    }
    
    container.appendChild(bar);
  });
}
</script>
